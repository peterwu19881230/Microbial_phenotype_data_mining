scale_colour_manual(values=c("Not co-annotated"="blue","All"="black"))
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc)),col="Not co-annotated")+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc)),col="All")+
scale_colour_manual(values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual(values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual(values=c("","Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual(values=c("_","Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual(values=c("adfg","Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
?legend
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual(values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")+legend(x="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual(values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")+legend(legend="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual(values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual("adfg",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"))+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"))+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
size=2
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
size=1
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
size=1
alpha=0.8
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"),size=size)+
theme(axis.text = element_text(size=15))+labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
dim(result_0.6)
View(result_0.6)
size=1
alpha=0.8
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc[length(pcc):1],y=length(pcc):1,color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc[length(pcc):1],y=length(pcc):1,color="All"),size=size,alpha=alpha)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
result_0.6$pcc[1:5]
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"),alpha=alpha)+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
?scale_colour_manual
size=1
alpha=0.8
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"="blue","All"="black"))+
scale_alpha_manual(values = c(alpha,alpha))
alpha
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_x_reverse()+
scale_colour_manual("",values=alpha(c("Not co-annotated"="blue","All"="black"),alpha))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_x_reverse()+
scale_colour_manual("",values=alpha(c("Not co-annotated"="blue","All"="black"),0.3))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size,alpha=alpha)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size,alpha=alpha)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"=alpha("blue",0.1),"All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
alpha("blue",0.1)
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"=alpha("red",0.1),"All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"=alpha("blue",0.1),"All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
size=1
alpha=0.3
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"=alpha("blue",alpha),"All"="black"))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
size=1
alpha=0.3
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"=alpha("blue",alpha),"All"=alpha("black",alpha)))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_x_reverse()+scale_x_continuous(limits = c(1, 0.6))
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
scale_x_continuous(limits = c(0.6,1))+
scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"=alpha("blue",alpha),"All"=alpha("black",alpha)))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
ggplot()+theme_minimal()+
geom_line(data = result_0.6,aes(x=pcc,y=1:length(pcc),color="Not co-annotated"),size=size)+
geom_line(data = result_everything_0.6,aes(x=pcc,y=1:length(pcc),color="All"),size=size)+
xlim(0.6,1)+scale_x_reverse()+
scale_colour_manual("",values=c("Not co-annotated"=alpha("blue",alpha),"All"=alpha("black",alpha)))+
theme(axis.text = element_text(size=15),
legend.text=element_text(size=15))+
labs(x="",y="")
sum(Ternary_Data_324cutff %in% c(1,-1),na.rm=T) #15833
sum(Ternary_Data_324cutff %in% 1,na.rm=T)
sum(Ternary_Data_324cutff %in% -1,na.rm=T)
sum(Ternary_Data_324cutff %in% c(1,-1),na.rm=T) #15833
dat=read.xlsx("/Users/peterwu/TAMU Google Drive/OMP/Peter Wu/Campos et al/DatasetEV2.xlsx",sheetName="Scores",stringsAsFactors=F)
strain=dat[,1]
dat=dat[,-which(names(dat) %in% c("Gene.deletion","OD600nm","Elaps.time","Plate.nb","Well.nb","MorphoIsland","CellCyleIsland"))] #They had a type in CellCy"c"leIsland
dat[ dat == "NaN" ] <- NA #ref: https://stackoverflow.com/questions/3357743/replacing-character-values-with-na-in-a-data-frame
dat=apply(dat,2,as.numeric)
grepl("WT",strain) %>% sum
dat=dat[!grepl("WT",strain),]
strain=strain[!grepl("WT",strain)]
strainCC=cor(t(dat),use="pairwise.complete.obs")
colnames(strainCC)=1:length(strain)
colnames(strainCC)=1:length(strain)
strain1_strain2_pcc=melt_dist(strainCC)
names(strain1_strain2_pcc)=c("strain1","strain2","pcc")
strain_id1=cbind(strain,1:length(strain)) %>% as.data.frame(stringsAsFactors=F)
names(strain_id1)=c("gene1","strain1")
strain_id2=cbind(strain,1:length(strain)) %>% as.data.frame(stringsAsFactors=F)
names(strain_id2)=c("gene2","strain2")
strain1_strain2_pcc=left_join(strain1_strain2_pcc,strain_id1,by="strain1")
strain1_strain2_pcc=left_join(strain1_strain2_pcc,strain_id2,by="strain2")
strain1_strain2_pcc=strain1_strain2_pcc[,c("gene1","gene2","pcc")]
dim(strain1_strain2_pcc)
dim(duplicated(strain1_strain2_pcc))
8931651-8722040
length(strain)
dim(combn(4227))
dim(combn(4227,2))
View(ECK.Pathway_table)
pheatmap(All_Data[c(1628,1809,1720,1626),1:20],cluster_rows = F,cluster_cols = F,color = colorRampPalette(c("yellow","white", "blue"))(100))
pheatmap(All_Data[c(1628,1809,1720,1626),1:20],cluster_rows = F,cluster_cols = F,color = colorRampPalette(c("red","white", "blue"))(100))
pheatmap(All_Data,cluster_rows = F,cluster_cols = F,color = colorRampPalette(c("red","white", "blue"))(100))
a=matrix(c(1,2,3),c(0,0,0),ncol=3)
b=matrix(c(4,5,6),c(0,0,0),ncol=3)
a+b
a
b
a=matrix(c(1,2,3,0,0,0),ncol=3)
b=matrix(c(4,5,6,0,0,0),ncol=3)
a+b
a
b
a=matrix(c(1,2,3,0,0,0),ncol=3,byrow=T)
b=matrix(c(4,5,6,0,0,0),ncol=3,byrow=T)
a
b
a+b
setwd("/Users/peterwu/Dropbox/Nichols_Data_mining")
source("Nichols_preload.R")
class(id_allAttributes)
id_pwyAnnot=id_allAttributes[,c("ids","Pwy")] %>% unique
dim(id_pwyAnnot)
fake_pwyAnnot=id_pwyAnnot
sum(!is.na(fake_pwyAnnot$Pwy)) #total annotations= 2344
set.seed(102)
random_index=base::sample(dim(fake_pwyAnnot)[1],dim(fake_pwyAnnot)[1])
sum(fake_pwyAnnot$Pwy!=fake_pwyAnnot$Pwy[random_index],na.rm=T) #975 annotations are different when they are re-ordered randomly
start=Sys.time()
fake_pwyAnnot=id_pwyAnnot
index=1:dim(id_pwyAnnot)[1]
i=1
j=1
repeat{
set.seed(i)
toBeSwitched=base::sample(dim(id_pwyAnnot)[1],2)
index[toBeSwitched[1]]=toBeSwitched[2];index[toBeSwitched[2]]=toBeSwitched[1]
if(sum(fake_pwyAnnot$Pwy!=fake_pwyAnnot$Pwy[index],na.rm=T)>=100*j){ #maybe change to "==100*j" later?
fake_pwyAnnot[,j+2]=fake_pwyAnnot$Pwy[index]
print(paste("no. ",j," mis-annotation set is done",sep=""))
j=j+1
}
if(sum(fake_pwyAnnot$Pwy!=fake_pwyAnnot$Pwy[index],na.rm=T)==1000){
##Why 1000?: no matter how many times I shuffle the annotations, it's hard to get more than 975 annotations (using different seed gives me a no. at around 1000)
break
}
i=i+1
}
end=Sys.time()
end-start #Time difference of 6.437369 secs
if(!file.exists("Data/mis_annotation_dfs.RData")){  #If the file cannot be found, re-process
no_misAnnot=c()
for(i in 3:dim(fake_pwyAnnot)[2]){
no_misAnnot[i-2]=sum(fake_pwyAnnot$Pwy!=fake_pwyAnnot[,i],na.rm=T)
}
no_misAnnot #101  200  301  400  501  600  700  800  900 1000
dat=All_Data_NAimputed
start.time = Sys.time()
result=list()
for(i in 2:dim(fake_pwyAnnot)[2]){
attribute_list=attr_list(fake_pwyAnnot$ids,fake_pwyAnnot[,i])
result[[i-1]]=dist_TF_cumsum(data=dat,attribute_list = attribute_list,dist_metric = pcc_dist)
}
save(result,file="Data/mis_annotation_dfs.RData")
end.time = Sys.time()
end.time - start.time #Time difference of 3.164703 hours
}else load("Data/mis_annotation_dfs.RData")
1-result[[1]][[1]]$distance[c(1000,2000,3000)] #0.7886812 0.6652216 0.5774545
samples=1:4000
library(scales) #This is for label=comma (not using scientific notation and put commas) to work
ggplot()+theme(text = element_text(size=20))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[1]][[1]]$cumsum[samples]/((sum(result[[1]][[1]]$sameORnot)/length(result[[1]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="0"))+ #0=original (use 0 instead of "original to prevent wrong re-ordering of the side bar")
geom_line(data=data.frame(no=samples,foldEnrichment=result[[2]][[1]]$cumsum[samples]/((sum(result[[2]][[1]]$sameORnot)/length(result[[2]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="1"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[3]][[1]]$cumsum[samples]/((sum(result[[3]][[1]]$sameORnot)/length(result[[3]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="2"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[4]][[1]]$cumsum[samples]/((sum(result[[4]][[1]]$sameORnot)/length(result[[4]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="3"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[5]][[1]]$cumsum[samples]/((sum(result[[5]][[1]]$sameORnot)/length(result[[5]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="4"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[6]][[1]]$cumsum[samples]/((sum(result[[6]][[1]]$sameORnot)/length(result[[6]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="5"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[7]][[1]]$cumsum[samples]/((sum(result[[7]][[1]]$sameORnot)/length(result[[7]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="6"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[8]][[1]]$cumsum[samples]/((sum(result[[8]][[1]]$sameORnot)/length(result[[8]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="7"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[9]][[1]]$cumsum[samples]/((sum(result[[9]][[1]]$sameORnot)/length(result[[9]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="8"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[10]][[1]]$cumsum[samples]/((sum(result[[10]][[1]]$sameORnot)/length(result[[10]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="9"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[11]][[1]]$cumsum[samples]/((sum(result[[11]][[1]]$sameORnot)/length(result[[11]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="ten"))+ #ten is to prevent wrong re-ordering of the side bar
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')
ggplot()+theme(text = element_text(size=20))+theme_minimal()
ggplot()+theme(text = element_text(size=20))+theme_minimal()+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[1]][[1]]$cumsum[samples]/((sum(result[[1]][[1]]$sameORnot)/length(result[[1]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="0"))+ #0=original (use 0 instead of "original to prevent wrong re-ordering of the side bar")
geom_line(data=data.frame(no=samples,foldEnrichment=result[[2]][[1]]$cumsum[samples]/((sum(result[[2]][[1]]$sameORnot)/length(result[[2]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="1"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[3]][[1]]$cumsum[samples]/((sum(result[[3]][[1]]$sameORnot)/length(result[[3]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="2"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[4]][[1]]$cumsum[samples]/((sum(result[[4]][[1]]$sameORnot)/length(result[[4]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="3"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[5]][[1]]$cumsum[samples]/((sum(result[[5]][[1]]$sameORnot)/length(result[[5]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="4"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[6]][[1]]$cumsum[samples]/((sum(result[[6]][[1]]$sameORnot)/length(result[[6]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="5"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[7]][[1]]$cumsum[samples]/((sum(result[[7]][[1]]$sameORnot)/length(result[[7]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="6"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[8]][[1]]$cumsum[samples]/((sum(result[[8]][[1]]$sameORnot)/length(result[[8]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="7"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[9]][[1]]$cumsum[samples]/((sum(result[[9]][[1]]$sameORnot)/length(result[[9]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="8"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[10]][[1]]$cumsum[samples]/((sum(result[[10]][[1]]$sameORnot)/length(result[[10]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="9"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[11]][[1]]$cumsum[samples]/((sum(result[[11]][[1]]$sameORnot)/length(result[[11]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="ten"))+ #ten is to prevent wrong re-ordering of the side bar
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')
ggplot()+theme_minimal()+theme(text = element_text(size=20))
ggplot()+theme_minimal()+theme(text = element_text(size=20))
ggplot()+theme_minimal()+theme(text = element_text(size=20))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[1]][[1]]$cumsum[samples]/((sum(result[[1]][[1]]$sameORnot)/length(result[[1]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="0"))+ #0=original (use 0 instead of "original to prevent wrong re-ordering of the side bar")
geom_line(data=data.frame(no=samples,foldEnrichment=result[[2]][[1]]$cumsum[samples]/((sum(result[[2]][[1]]$sameORnot)/length(result[[2]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="1"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[3]][[1]]$cumsum[samples]/((sum(result[[3]][[1]]$sameORnot)/length(result[[3]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="2"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[4]][[1]]$cumsum[samples]/((sum(result[[4]][[1]]$sameORnot)/length(result[[4]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="3"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[5]][[1]]$cumsum[samples]/((sum(result[[5]][[1]]$sameORnot)/length(result[[5]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="4"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[6]][[1]]$cumsum[samples]/((sum(result[[6]][[1]]$sameORnot)/length(result[[6]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="5"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[7]][[1]]$cumsum[samples]/((sum(result[[7]][[1]]$sameORnot)/length(result[[7]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="6"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[8]][[1]]$cumsum[samples]/((sum(result[[8]][[1]]$sameORnot)/length(result[[8]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="7"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[9]][[1]]$cumsum[samples]/((sum(result[[9]][[1]]$sameORnot)/length(result[[9]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="8"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[10]][[1]]$cumsum[samples]/((sum(result[[10]][[1]]$sameORnot)/length(result[[10]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="9"))+
geom_line(data=data.frame(no=samples,foldEnrichment=result[[11]][[1]]$cumsum[samples]/((sum(result[[11]][[1]]$sameORnot)/length(result[[11]][[1]]$sameORnot))*samples)),aes(no,foldEnrichment,color="ten"))+ #ten is to prevent wrong re-ordering of the side bar
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')
##change pheno_dat to get 2 different results (1 is using all the strains and the other is using strains that have at least 1 significant phenotype)
pheno_dat=strain1strain2_allAnnotations_allDistances
#pheno_dat=sigPheno_strain1strain2_allAnnotations_allDistances
#AnyCoAnnotation or other combinations of databases (later the experiment can be expanded to include any 2,3 databases)
CoAnnotation_dataframe=data.frame(any=rep(0,7914231),Pwy=rep(0,7914231),pcomplex=rep(0,7914231),operon=rep(0,7914231),regulator=rep(0,7914231),kegg_modules=rep(0,7914231),Pwy_and_kegg_modules=rep(0,7914231),
Pwy_or_kegg_modules=rep(0,7914231),anyTwo=rep(0,7914231),anyThree=rep(0,7914231),anyFour=rep(0,7914231),anyFive=rep(0,7914231))
CoAnnotation_dataframe$any=ifelse(rowSums(pheno_dat[,c("Pwy","pcomplex","operon","regulator","kegg_modules")])>0,T,F)
CoAnnotation_dataframe$Pwy=ifelse(pheno_dat[,"Pwy"]>0,T,F)
CoAnnotation_dataframe$pcomplex=ifelse(pheno_dat[,"pcomplex"]>0,T,F)
CoAnnotation_dataframe$operon=ifelse(pheno_dat[,"operon"]>0,T,F)
CoAnnotation_dataframe$regulator=ifelse(pheno_dat[,"regulator"]>0,T,F)
CoAnnotation_dataframe$kegg_modules=ifelse(pheno_dat[,"kegg_modules"]>0,T,F)
CoAnnotation_dataframe$Pwy_and_kegg_modules=ifelse(rowSums(pheno_dat[,c("Pwy","kegg_modules")])==2,T,F)
CoAnnotation_dataframe$Pwy_or_kegg_modules=ifelse(rowSums(pheno_dat[,c("Pwy","kegg_modules")])>0,T,F)
CoAnnotation_dataframe$anyTwo=ifelse(rowSums(pheno_dat[,c("Pwy","pcomplex","operon","regulator","kegg_modules")])>=2,T,F)
CoAnnotation_dataframe$anyThree=ifelse(rowSums(pheno_dat[,c("Pwy","pcomplex","operon","regulator","kegg_modules")])>=3,T,F)
CoAnnotation_dataframe$anyFour=ifelse(rowSums(pheno_dat[,c("Pwy","pcomplex","operon","regulator","kegg_modules")])>=4,T,F)
CoAnnotation_dataframe$anyFive=ifelse(rowSums(pheno_dat[,c("Pwy","pcomplex","operon","regulator","kegg_modules")])==5,T,F)
setwd("/Users/peterwu/Dropbox/Nichols_Data_mining/correlationVSannotation/figs")
#Print every fig to a file
distances=c("pcc","spearman","euclidean","euclidean_qualitative","euclidean_collapsedCond","mhd3","mhd3_collapsedCond","mi","mi_collapsedCond")
#reorder by ranking of PCC and calculate cumsum
enrich_CoAnnotation_list=list()
count=1
for(distance in distances){
CoAnnotation=CoAnnotation_dataframe[order(pheno_dat[,distance]),]
#Before I had: Error: vector memory exhausted (limit reached?)
##Solved by creating a new file:
##https://stackoverflow.com/questions/51295402/r-on-macos-error-vector-memory-exhausted-limit-reached
##Have to convert the logical TF to numeric TF in order for cumsum() to work
CoAnnotation=convertMatOrDF(CoAnnotation,as.numeric)
##Have to divide cumsum() by randomExp for every annotation set (or combinations of sets)
RandomExp=matrix(nrow=dim(CoAnnotation_dataframe)[1],ncol=dim(CoAnnotation_dataframe)[2])
for(i in 1:dim(CoAnnotation_dataframe)[2]){
RandomExp[,i]=sum(CoAnnotation_dataframe[,i])/length(CoAnnotation_dataframe[,i])*1:length(CoAnnotation_dataframe[,i])
}
RandomExp=as.data.frame(RandomExp)
#pairwise divsion (not matrix division)
enrich_CoAnnotation_list[[count]]=cumsum(CoAnnotation)/RandomExp
count=count+1
}
names(enrich_CoAnnotation_list)=distances
#plot it
samples=1:4000
##samples=seq(from=0,to=7914231,by=1989); samples[1]=1
#The gigantic forloop that prints out everything
for(i in 1:length(enrich_CoAnnotation_list)){
dat=enrich_CoAnnotation_list[[i]]
dat$xaxis=1:7914231
dat=dat[samples,]
dat=melt(dat,id.vars="xaxis")
##Complete graph
#library(scales) #This is for label=comma (not using scientific notation and put commas) to work
#ggplot(data=dat,aes(x=xaxis,y=value,color=variable))+
#  geom_line()+
#  theme(text = element_text(size=20))+
#  geom_hline(yintercept=1, linetype=2, color="red", size=1)+
#  labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')
##Graph that contains only combinations of annotation sets
library(scales) #This is for label=comma (not using scientific notation and put commas) to work
dat2=dat[dat$variable %in% c("any","anyTwo","anyThree","anyFour","anyFive"),]
ggplot(data=dat2,aes(x=xaxis,y=value,color=variable))+
geom_line(size=1,alpha=0.8)+
theme_minimal()+
theme(text = element_text(size=20))+
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')+
guides(color=guide_legend("Annotation Set"))
ggsave(paste(distances[i],"_combination.png",sep=""),width=12,height=8)
##Graph that contains different annotation sets
library(scales) #This is for label=comma (not using scientific notation and put commas) to work
dat3=dat[dat$variable %in% c("Pwy","pcomplex","operon","regulator","kegg_modules",
"Pwy_and_kegg_modules","Pwy_or_kegg_modules"),]
ggplot(data=dat3,aes(x=xaxis,y=value,color=variable))+
geom_line(size=1,alpha=0.8)+
theme_minimal()+
theme(text = element_text(size=20))+
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')+
guides(color=guide_legend("Annotation Set"))
ggsave(paste(distances[i],"_diffAnnotSet.png",sep=""),width=12,height=8)
}
ggplot(data=dat2,aes(x=xaxis,y=value,color=variable))+
geom_line(size=1,alpha=0.8)+
theme_minimal()+
theme(text = element_text(size=20))+
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')+
guides(color=guide_legend("Annotation Set"))
ggplot(data=dat2,aes(x=xaxis,y=value,color=variable))+
scale_y_continuous(limits = c(0, 16000))
ggplot(data=dat2,aes(x=xaxis,y=value,color=variable))+
scale_y_continuous(limits = c(0, 16000))+
geom_line(size=1,alpha=0.8)+
theme_minimal()+
theme(text = element_text(size=20))+
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')+
guides(color=guide_legend("Annotation Set"))
samples=1:4000
for(i in 1:length(enrich_CoAnnotation_list)){
dat=enrich_CoAnnotation_list[[i]]
dat$xaxis=1:7914231
dat=dat[samples,]
dat=melt(dat,id.vars="xaxis")
##Complete graph
#library(scales) #This is for label=comma (not using scientific notation and put commas) to work
#ggplot(data=dat,aes(x=xaxis,y=value,color=variable))+
#  geom_line()+
#  theme(text = element_text(size=20))+
#  geom_hline(yintercept=1, linetype=2, color="red", size=1)+
#  labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')
##Graph that contains only combinations of annotation sets
library(scales) #This is for label=comma (not using scientific notation and put commas) to work
dat2=dat[dat$variable %in% c("any","anyTwo","anyThree","anyFour","anyFive"),]
ggplot(data=dat2,aes(x=xaxis,y=value,color=variable))+
scale_y_continuous(limits = c(0, 16000))+
geom_line(size=1,alpha=0.8)+
theme_minimal()+
theme(text = element_text(size=20))+
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')+
guides(color=guide_legend("Annotation Set"))
ggsave(paste(distances[i],"_combination.png",sep=""),width=12,height=8)
##Graph that contains different annotation sets
library(scales) #This is for label=comma (not using scientific notation and put commas) to work
dat3=dat[dat$variable %in% c("Pwy","pcomplex","operon","regulator","kegg_modules",
"Pwy_and_kegg_modules","Pwy_or_kegg_modules"),]
ggplot(data=dat3,aes(x=xaxis,y=value,color=variable))+
scale_y_continuous(limits = c(0, 16000))+
geom_line(size=1,alpha=0.8)+
theme_minimal()+
theme(text = element_text(size=20))+
geom_hline(yintercept=1, linetype=2, color="red", size=1)+
labs(x = "Ranking of Distance",y="Fold Enrichment (normalized by random expectation)",aesthetic='custom text')+
guides(color=guide_legend("Annotation Set"))
ggsave(paste(distances[i],"_diffAnnotSet.png",sep=""),width=12,height=8)
}
in_pwy_table=ECK.Pathway_table[!(is.na(ECK.Pathway_table$PathwayID)),]
in_pwy_table$ids=as.numeric(in_pwy_table$ids)
in_pwy_table=ECK.Pathway_table[!(is.na(ECK.Pathway_table$PathwayID)),]
in_pwy_table=ECK.Pathway_table[!(is.na(ECK.Pathway_table$PathwayID)),]
in_pwy_table$ids=as.numeric(in_pwy_table$ids)
in_pwy_table=ECK.Pathway_table[!(is.na(ECK.Pathway_table$PathwayID)),]
